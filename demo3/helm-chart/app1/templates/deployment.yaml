apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app1.fullname" . }}
  labels:
    {{- include "app1.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      {{- include "app1.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "app1.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      terminationGracePeriodSeconds: 60
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "app1.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          # lifecycle:
          #   preStop:
          #     exec:
          #       command: ["/bin/sh", "-c", "sleep 40"]
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - |
                  httpResponseCode=$(curl -s -o /dev/null -w "%{http_code}"  "http://127.0.0.1:{{ .Values.service.port }}/health")
                  apolloResponseCode=$(curl -s -o /dev/null -w "%{http_code}" "http://127.0.0.1:{{ .Values.service.port }}/.well-known/apollo/server-health")
                  echo "Readiness: httpResponseCode ${httpResponseCode}">/proc/1/fd/1
                  echo "Readiness: apolloResponseCode ${apolloResponseCode}">/proc/1/fd/1
                  if [[ -z ${httpResponseCode} ]] || [[ ${httpResponseCode} != 200 ]] || [[ -z ${apolloResponseCode} ]] || [[ ${apolloResponseCode} != 200 ]]; then exit 1; fi
            initialDelaySeconds: {{ .Values.deployment.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.deployment.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.deployment.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.deployment.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.deployment.livenessProbe.failureThreshold }}
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - |
                  httpResponseCode=$(curl -s -o /dev/null -w "%{http_code}"  "http://127.0.0.1:{{ .Values.service.port }}/health")
                  apolloResponseCode=$(curl -s -o /dev/null -w "%{http_code}" "http://127.0.0.1:{{ .Values.service.port }}/.well-known/apollo/server-health")
                  echo "Readiness: httpResponseCode ${httpResponseCode}">/proc/1/fd/1
                  echo "Readiness: apolloResponseCode ${apolloResponseCode}">/proc/1/fd/1
                  if [[ -z ${httpResponseCode} ]] || [[ ${httpResponseCode} != 200 ]] || [[ -z ${apolloResponseCode} ]] || [[ ${apolloResponseCode} != 200 ]]; then exit 1; fi
            initialDelaySeconds: {{ .Values.deployment.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.deployment.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.deployment.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.deployment.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.deployment.readinessProbe.failureThreshold }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          command: ["node"]
          args: ["{{ .Values.start }}"]
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
